/*This project aims to build a machine learning model that detects fraudulent credit card transactions.
The dataset is highly imbalanced, so I applied undersampling techniques to balance the classes.
After training a Random Forest Classifier, the model was evaluated using accuracy, precision, recall, and confusion matrix.
This project highlights the importance of dealing with imbalanced datasets in real-world fraud detection systems.
*/
# Credit Card Fraud Detection

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from imblearn.under_sampling import RandomUnderSampler

# Load dataset
df = pd.read_csv("creditcard.csv")

# Features and label
X = df.drop('Class', axis=1)
y = df['Class']  # 1 = Fraud, 0 = Normal

# Handle class imbalance
rus = RandomUnderSampler(random_state=42)
X_resampled, y_resampled = rus.fit_resample(X, y)

# Split
X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, test_size=0.3, random_state=42)

# Train model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
